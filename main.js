(()=>{"use strict";document.addEventListener("DOMContentLoaded",(()=>{const e=document.querySelector(".ticket__container"),t=document.querySelector(".add__btn-ticket"),n=document.querySelector(".ticket__modal"),c=document.querySelector(".delete__modal"),i=document.querySelectorAll(".close__btn"),o=document.querySelector(".ticket__form"),d=document.querySelector(".confirm__DeleteBtn"),r=document.querySelector(".cancel__DeleteBtn"),s=document.querySelector(".loading__icon");let l=null;const a="https://helpdesk-backend-ef4y.onrender.com/api";function u(){fetch(`${a}?method=allTickets`).then((e=>e.json())).then(y)}function y(t){e.innerHTML="",s.style.display="block",t.forEach((t=>{const i=(r=new Date(t.created),`${String(r.getDate()).padStart(2,"0")}.${String(r.getMonth()+1).padStart(2,"0")}.${String(r.getFullYear()).slice(-2)} ${String(r.getHours()).padStart(2,"0")}:${String(r.getMinutes()).padStart(2,"0")}`),d=document.createElement("li");var r;d.dataset.id=t.id,d.innerHTML=`\n          <div class="ticket" data-id="${t.id}">\n            <input type="checkbox" class="ticket__checkbox" ${t.status?"checked":""}>\n            <div class="body__ticket">\n              <h3>${t.name}</h3>\n              <span>${i}</span>\n            </div>\n\n            <div class="btns">\n              <button class="edit__Btn"> &#9998; </button>\n              <button class="delete__Btn"> &#10006; </button>\n            </div>\n\n            <div class="show__description">\n              <p></p>\n            </div>\n          </div>\n        `;const s=d.querySelector(".ticket__checkbox");s&&s.addEventListener("click",(e=>{var n;e.stopPropagation(),n=t.id,fetch(`${a}?method=ticketById&id=${n}`).then((e=>e.json())).then((e=>(e.status=!e.status,fetch(`${a}?method=updateById&id=${n}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)})))).then(u)}));const y=d.querySelector(".edit__Btn");y&&y.addEventListener("click",(e=>{var c;e.stopPropagation(),c=t.id,fetch(`${a}?method=ticketById&id=${c}`).then((e=>e.json())).then((e=>{l=c,n.querySelector(".modal__title").innerText="Изменить тикет",o.querySelector(".ticket__id").value=e.id,o.querySelector(".input__text").value=e.name,o.querySelector(".textarea__description").value=e.description,n.style.display="block"}))}));const _=d.querySelector(".delete__Btn");_&&_.addEventListener("click",(e=>{var n;e.stopPropagation(),n=t.id,l=n,c.style.display="block"}));const p=d.querySelector(".body__ticket");p&&p.addEventListener("click",(()=>{var e;e=t.id,fetch(`${a}?method=ticketById&id=${e}`).then((e=>e.json())).then((e=>{const t=document.querySelector(`.ticket[data-id="${e.id}"]`),n=t.querySelector(".show__description");t.classList.contains("ticket__show")?(n.style.display="none",t.classList.remove("ticket__show")):(n.querySelector("p").textContent=e.description,n.style.display="block",t.classList.add("ticket__show"))})).catch((e=>console.error("Error fetching ticket details:",e)))})),e.appendChild(d)})),s.style.display="none"}function _(){n.style.display="none",c.style.display="none"}i.forEach((e=>{e.addEventListener("click",_)})),t.addEventListener("click",(()=>{n.querySelector(".modal__title").innerText="Добавить тикет",o.reset(),o.querySelector(".ticket__id").value="",n.style.display="block"})),o.addEventListener("submit",(function(e){e.preventDefault();const t=o.querySelector(".ticket__id").value,c=o.querySelector(".input__text").value,i=o.querySelector(".textarea__description").value,d=t?"updateById":"createTicket";fetch(t?`${a}?method=${d}&id=${t}`:`${a}?method=${d}`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({name:c,description:i})}).then((()=>{n.style.display="none",u()}))})),d.addEventListener("click",(function(){fetch(`${a}?method=deleteById&id=${l}`,{method:"GET"}).then((()=>{c.style.display="none",u()}))})),r.addEventListener("click",_),u()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,